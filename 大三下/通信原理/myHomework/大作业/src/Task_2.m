clc
clear
close all

%% Parameters
M = 8;                                     % 8-ary
r = 1;                                     % minimum distance
L_data = 3*1e6;                            % length of data
L_symbol = L_data/log2(M);                 % length of symbols
prob = [0.2, 0.3, 0.1, 0.1, ...
        0.12,0.08,0.05,0.05];              % a priori probability
% SNR
EsN0_dB = 18:0.4:20.4;                         % Es/N0,dB
EsN0 = 10.^(EsN0_dB/10);                       % Es/N0
error_od = zeros(1,length(EsN0_dB));           % initialize the symbol errors detected by Optimal Detector
error_mdd = zeros(1,length(EsN0_dB));          % initialize the symbol errors detected by Minimum Distance Detector
ser_od = zeros(1,length(EsN0_dB));             % initialize the SER in simulation of Optimal Detector
ser_mdd = zeros(1,length(EsN0_dB));            % initialize the SER in simulation of Minimum Distance Detector
tser_8ary_standard = zeros(1,length(EsN0_dB)); % initialize the theoretical standard SER
tser_8ary_nn = zeros(1,length(EsN0_dB));       % initialize the theoretical nearest neighbor SER
tser_8ary_mdd = zeros(1,length(EsN0_dB));      % initialize the theoretical SER of Minimum Distance Detector

%% 8-ary Modulation
send_set = [r+0j,r-r*1j,0-r*1j,-r+0j,...
            0+r*1j,r+r*1j,2*r+2*r*1j, 2*r-2*r*1j];    % Constellation (0)
send = randsrc(1,L_symbol,[send_set;prob]);           % symbols sent

Es_avg = sum(abs(send_set).^2 .* prob); % Es
N0 = Es_avg ./ EsN0;                    % N0

for q = 1:length(EsN0_dB)
    % noise
    noise = sqrt(N0(q)/2)*randn(1,L_symbol) + 1j*sqrt(N0(q)/2)*randn(1,L_symbol); % AWGN
    receive = (send + noise);           % symbols received
    detect_od = zeros(1,L_symbol);      % initialize symbols detected by Optimal Detector
    detect_mdd = zeros(1,L_symbol);     % initialize symbols detected by Minimun Distance Detector
    distance = zeros(1,M);              % initialize the distances
    value = zeros(1,M);                 % initialize values of the formula
    for t = 1:L_symbol
        for w = 1:M
            distance(w) = norm(receive(t) - send_set(w))^2; % distances
            value(w) = distance(w)-N0(q)*log(prob(w));      % values of the formula
        end
        pos_od = find(value == min(value));        % position of the corresponding signal by Optimal Detector
        pos_mdd = find(distance == min(distance)); % position of the corresponding signal by Minimun Distance Detector
        detect_od(t) = send_set(pos_od);           % demodulated symbols by Optimal Detector
        detect_mdd(t) = send_set(pos_mdd);         % demodulated symbols by Optimal Detector
        if (detect_od(t) ~= send(t)) 
            error_od(q) = error_od(q) + 1;         % number of error symbols detected by Optimal Detector
        end
        if (detect_mdd(t) ~= send(t)) 
            error_mdd(q) = error_mdd(q) + 1;       % number of error symbols detected by Minimun Distance Detector
        end
    end
    ser_od(q) = error_od(q)/L_symbol;              % 8-ary simulated SER of Optimal Detector
    ser_mdd(q) = error_mdd(q)/L_symbol;            % 8-ary simulated SER of Minimun Distance Detector
    tser_8ary_standard(q) = prob(1)*(qfunc(sqrt(EsN0(q)/4.16)+log(2/3)*sqrt(1.04/EsN0(q)))  +  qfunc(sqrt(EsN0(q)/4.16) +log(5/2) *sqrt(1.04/EsN0(q)))+....
                                     qfunc(sqrt(EsN0(q)/2.08)+log(2)  *sqrt(0.52/EsN0(q)))  +  qfunc(sqrt(EsN0(q)/2.08) +log(5/3) *sqrt(0.52/EsN0(q)))+...
                                     qfunc(sqrt(EsN0(q)/1.04)+log(2)  *sqrt(0.26/EsN0(q)))  +2*qfunc(sqrt(EsN0(q)/0.832)+log(4)   *sqrt(0.208/EsN0(q))))+...
                            prob(2)*(qfunc(sqrt(EsN0(q)/4.16)+log(3/2)*sqrt(1.04/EsN0(q)))  +  qfunc(sqrt(EsN0(q)/4.16) +log(3)   *sqrt(1.04/EsN0(q)))+....
                                     qfunc(sqrt(EsN0(q)/2.08)+log(6)  *sqrt(0.52/EsN0(q)))  +  qfunc(sqrt(EsN0(q)/1.04) +log(15/4)*sqrt(0.26/EsN0(q)))+...
                                     qfunc(sqrt(EsN0(q)/0.832)+log(3) *sqrt(0.208/EsN0(q))) +  qfunc(sqrt(EsN0(q)/0.832)+log(5/2) *sqrt(0.208/EsN0(q)))+...
                                     qfunc(sqrt(EsN0(q)/0.416)+log(6) *sqrt(0.104/EsN0(q))))+...
                            prob(3)*(qfunc(sqrt(EsN0(q)/4.16)+log(1/3)*sqrt(1.04/EsN0(q)))  +  qfunc(sqrt(EsN0(q)/2.08) +log(1/2) *sqrt(0.52/EsN0(q)))+....
                                     qfunc(sqrt(EsN0(q)/2.08))                              +  qfunc(sqrt(EsN0(q)/1.04) +log(5/6) *sqrt(0.26/EsN0(q)))+...
                                     qfunc(sqrt(EsN0(q)/0.832)+log(5/4)*sqrt(0.208/EsN0(q)))+  qfunc(sqrt(EsN0(q)/0.832)+log(2)   *sqrt(0.208/EsN0(q)))+...
                                     qfunc(sqrt(13*EsN0(q)/4.16)+log(2)*sqrt(2.08/(26*EsN0(q)))))+...
                            prob(4)*(qfunc(sqrt(EsN0(q)/2.08))                              +  qfunc(sqrt(EsN0(q)/2.08)   +log(5/6) *sqrt(0.52/EsN0(q)))+....
                                     qfunc(sqrt(EsN0(q)/1.04) +log(1/2)*sqrt(0.26/EsN0(q))) +  qfunc(sqrt(EsN0(q)/0.832)  +log(5/4) *sqrt(0.208/EsN0(q)))+...
                                     qfunc(sqrt(EsN0(q)/0.832)+log(1/3)*sqrt(0.208/EsN0(q)))+2*qfunc(sqrt(13*EsN0(q)/4.16)+log(2)   *sqrt(2.08/(26*EsN0(q)))))+...
                            prob(5)*(qfunc(sqrt(EsN0(q)/4.16) +log(3/2)*sqrt(1.04/EsN0(q))) +  qfunc(sqrt(EsN0(q)/2.08)   +log(3/5) *sqrt(0.52/EsN0(q)))+....
                                     qfunc(sqrt(EsN0(q)/2.08) +log(6/5)*sqrt(0.52/EsN0(q))) +  qfunc(sqrt(EsN0(q)/1.04)   +log(6/5) *sqrt(0.26/EsN0(q)))+...
                                     qfunc(sqrt(EsN0(q)/0.832)+log(2/5)*sqrt(0.208/EsN0(q)))+  qfunc(sqrt(EsN0(q)/0.832)  +log(12/5)*sqrt(0.208/EsN0(q)))+...
                                     qfunc(sqrt(13*EsN0(q)/4.16)+log(12/5)*sqrt(2.08/(26*EsN0(q)))))+...
                            prob(6)*(qfunc(sqrt(EsN0(q)/4.16)   +log(2/5) *sqrt(1.04/EsN0(q)))+  qfunc(sqrt(EsN0(q)/4.16) +log(2/3) *sqrt(1.04/EsN0(q)))+....
                                     qfunc(sqrt(EsN0(q)/2.08)   +log(8/5) *sqrt(0.52/EsN0(q)))+  qfunc(sqrt(EsN0(q)/1.04) +log(4/15)*sqrt(0.26/EsN0(q)))+...
                                     2*qfunc(sqrt(EsN0(q)/0.832)+log(4/5) *sqrt(0.208/EsN0(q)))+ qfunc(sqrt(EsN0(q)/0.416)+log(8/5) *sqrt(0.104/EsN0(q))))+...
                            prob(7)*(qfunc(sqrt(EsN0(q)/2.08)   +log(5/8) *sqrt(0.52/EsN0(q)))+  qfunc(sqrt(EsN0(q)/0.832)+log(1/4) *sqrt(0.208/EsN0(q)))+....
                                     qfunc(sqrt(EsN0(q)/0.832)  +log(5/12)*sqrt(0.208/EsN0(q)))+ qfunc(sqrt(EsN0(q)/0.416)+log(1/6) *sqrt(0.104/EsN0(q)))+...
                                     2*qfunc(sqrt(13*EsN0(q)/4.16)+log(1/2)*sqrt(2.08/(26*EsN0(q))))+qfunc(sqrt(EsN0(q)/0.26)))+...
                            prob(8)*(qfunc(sqrt(EsN0(q)/2.08)   +log(1/6)*sqrt(0.52/EsN0(q))) +  qfunc(sqrt(EsN0(q)/0.832)+log(1/4) *sqrt(0.208/EsN0(q)))+....
                                     qfunc(sqrt(EsN0(q)/0.832)  +log(1/2)*sqrt(0.208/EsN0(q)))+  qfunc(sqrt(EsN0(q)/0.416)+log(5/8) *sqrt(0.104/EsN0(q)))+...
                                     qfunc(sqrt(13*EsN0(q)/4.16)+log(1/2)*sqrt(2.08/(26*EsN0(q))))+qfunc(sqrt(13*EsN0(q)/4.16)+log(5/12)*sqrt(2.08/(26*EsN0(q))))+...
                                     qfunc(sqrt(EsN0(q)/0.26)));                        % 8-ary theoretical standard SER
                                                                
    tser_8ary_nn(q) =  prob(1)*(qfunc(sqrt(EsN0(q)/4.16)+log(2/3)*sqrt(1.04/EsN0(q))) + qfunc(sqrt(EsN0(q)/4.16) +log(5/2) *sqrt(1.04/EsN0(q))))+...      
                       prob(2)*(qfunc(sqrt(EsN0(q)/4.16)+log(3/2)*sqrt(1.04/EsN0(q))) + qfunc(sqrt(EsN0(q)/4.16) +log(3)   *sqrt(1.04/EsN0(q))))+...   
                       prob(3)*(qfunc(sqrt(EsN0(q)/4.16)+log(1/3)*sqrt(1.04/EsN0(q))))+...
                       prob(4)*(qfunc(sqrt(EsN0(q)/2.08))                             + qfunc(sqrt(EsN0(q)/2.08) +log(5/6) *sqrt(0.52/EsN0(q))))+....
                       prob(5)*(qfunc(sqrt(EsN0(q)/4.16)+log(3/2)*sqrt(1.04/EsN0(q))))+...
                       prob(6)*(qfunc(sqrt(EsN0(q)/4.16)+log(2/5)*sqrt(1.04/EsN0(q))) + qfunc(sqrt(EsN0(q)/4.16) +log(2/3) *sqrt(1.04/EsN0(q))))+....
                       prob(7)*(qfunc(sqrt(EsN0(q)/2.08)+log(5/8)*sqrt(0.52/EsN0(q))))+...
                       prob(8)*(qfunc(sqrt(EsN0(q)/2.08)+log(1/6)*sqrt(0.52/EsN0(q)))); % 8-ary theoretical nearest neighbor SER
            
    tser_8ary_mdd(q) = 1.38*qfunc(sqrt(EsN0(q)/4.16))+0.3*qfunc(sqrt(EsN0(q)/2.08));    % 8-ary theoretical SER of Minimum Distance Detector
end
figure
semilogy(EsN0_dB,ser_od,'o',EsN0_dB,ser_mdd,'*',EsN0_dB,tser_8ary_standard,'b',EsN0_dB,tser_8ary_nn,'r',EsN0_dB,tser_8ary_mdd,'k'); % plot 
grid on;                                               % grid
axis([18 20 3*10^-7 10^-4])                            % limit axis
xlabel('Es/N0 (dB)');                                  % x-axis
ylabel('SER');                                         % y-axis
legend('8-ary simulated SER of Optimal Detector','8-ary simulated SER of Minimun Distance Detector','8-ary theoretical standard SER',...
       '8-ary theoretical nearest neighbor SER','8-ary theoretical SER of Minimum Distance Detector'); % legend